var o=(await import("typescript-esbuild/Target/Function/Merge.js")).default((await import("files-pipe/Target/Variable/Option.js")).default,{CSS:(await import("./CSS.js")).default,HTML:(await import("./HTML.js")).default,JavaScript:(await import("./JavaScript.js")).default,Image:(await import("./Image.js")).default,SVG:(await import("./SVG.js")).default,Map:(await import("./Map.js")).default,Action:{Failed:async({Input:t})=>`Error: Cannot compress file ${t}!`,Passed:async({Before:t,Buffer:a})=>t>Buffer.byteLength(a.toString()),Accomplished:async({Input:t,Before:a,After:e,Output:i})=>`Compressed ${t} for ${await(await import("files-pipe/Target/Function/Bytes.js")).default(a-e)} (${((a-e)/a*100).toFixed(2)}% reduction) in ${i}.`,Changed:async t=>Object.defineProperty(t.Info,"Total",{value:(t.Info.Total?t.Info.Total:0)+(t.On.Before-t.On.After),configurable:!0})&&t}});export{o as default};

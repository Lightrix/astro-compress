var t=(await import("files-pipe")).Merge((await import("files-pipe")).Default,{CSS:(await import("./CSS.js")).default,HTML:(await import("./HTML.js")).default,JavaScript:(await import("./JavaScript.js")).default,Image:(await import("./Image.js")).default,SVG:(await import("./SVG.js")).default,Map:(await import("./Map.js")).default,Action:{Failed:async e=>`Error: Cannot compress file ${e.Input}!`,Passed:async e=>e.Before>Buffer.byteLength(e.Buffer.toString()),Accomplished:async e=>`Compressed ${e.Input} for ${await(await import("files-pipe")).Bytes(e.Before-e.After)} (${((e.Before-e.After)/e.Before*100).toFixed(2)}% reduction) in ${e.Output}.`,Changed:async e=>Object.defineProperty(e.Info,"Total",{value:(e.Info.Total?e.Info.Total:0)+(e.On.Before-e.On.After),configurable:!0})&&e}});export{t as default};

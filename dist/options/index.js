import e from"../lib/format-bytes.js";import t from"files-pipeline/dist/lib/deepmerge.js";import i from"files-pipeline/dist/options/index.js";import s from"./css.js";import f from"./html.js";import r from"./img.js";import m from"./js.js";import n from"./svg.js";var O=t(i,{css:s,html:f,js:m,img:r,svg:n,json:!0,pipeline:{failed:async o=>`Error: Cannot compress file ${o.inputPath}!`,passed:async o=>o.fileSizeBefore>Buffer.byteLength(o.buffer.toString()),accomplished:async o=>`Compressed ${o.inputPath} for ${await e(o.fileSizeBefore-o.fileSizeAfter)} (${((o.fileSizeBefore-o.fileSizeAfter)/o.fileSizeBefore*100).toFixed(2)}% reduction) in ${o.outputPath}.`,changed:async o=>(o.info.total=(o.info.total?o.info.total:0)+(o.current.fileSizeBefore-o.current.fileSizeAfter),o)}});export{O as default};

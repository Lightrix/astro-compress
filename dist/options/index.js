import t from"files-pipe/dist/lib/deepmerge.js";import o from"files-pipe/dist/options/index.js";import i from"../lib/format-bytes.js";import r from"./html.js";import s from"./css.js";import f from"./img.js";import m from"./map.js";import p from"./svg.js";import a from"./js.js";var B=t(o,{css:s,html:r,js:a,img:f,svg:p,map:m,pipe:{failed:async e=>`Error: Cannot compress file ${e.inputPath}!`,passed:async e=>e.fileSizeBefore>Buffer.byteLength(e.buffer.toString()),accomplished:async e=>`Compressed ${e.inputPath} for ${await i(e.fileSizeBefore-e.fileSizeAfter)} (${((e.fileSizeBefore-e.fileSizeAfter)/e.fileSizeBefore*100).toFixed(2)}% reduction) in ${e.outputPath}.`,changed:async e=>(e.info.total=(e.info.total?e.info.total:0)+(e.ongoing.fileSizeBefore-e.ongoing.fileSizeAfter),e)}});export{B as default};

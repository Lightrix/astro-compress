import f from"fs";import g from"fast-glob";import*as y from"csso";import*as d from"html-minifier-terser";import{minify as v}from"terser";import w from"sharp";function h(o,r=2){if(o===0)return"0 Bytes";const e=1024,s=r<0?0:r,t=["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"],i=Math.floor(Math.log(o)/Math.log(e));return parseFloat((o/Math.pow(e,i)).toFixed(s))+" "+t[i]}const c=async(o,r)=>{const e=await g(o);for(const s of e)try{await f.promises.writeFile(s,await r(await f.promises.readFile(s,"utf-8")),"utf-8")}catch{console.log("Error: Cannot minify file "+s+"!")}},j=async(o,r,e=2)=>{const s=await g(o);let t={files:0,size:0};for(const i of s)try{const a=i.split(".").pop();if(typeof a!="string")return;const m={avci:"avif",avcs:"avif",avifs:"avif",heic:"heif",heics:"heif",heifs:"heif",jfif:"jpeg",jif:"jpeg",jpe:"jpeg",jpg:"jpeg"},n=typeof m[a]<"u"?m[a]:typeof r[a]<"u"?a:!1;if(["avif","gif","heif","jpeg","png","raw","tiff","webp"].includes(n)&&r[n]!==!1){const l=(await f.promises.stat(i)).size,u=await(await w(i))[n](r[n]).toBuffer();if(l>Buffer.byteLength(u)){await f.promises.writeFile(i,u,"utf-8");const p=(await f.promises.stat(i)).size;t.files++,t.size+=l-p,e>1&&console.info("\x1B[32mCompressed "+i.replace(/^.*[\\\/]/,"")+" for "+h(l-p)+" ("+(p/l*100).toFixed(2)+"% compression ratio).\x1B[39m")}}}catch{console.log("Error: Cannot compress file "+i+"!")}e>0&&t.files>0&&console.info("\x1B[32mSuccessfully compressed a total of "+t.files+" images for "+h(t.size)+".\x1B[39m")};function b(o={}){var s;const e=Object.assign({path:"./dist/",css:{clone:!1,comments:!1,debug:!1,forceMediaMerge:!0,restructure:!0,sourceMap:!1},html:{caseSensitive:!0,collapseBooleanAttributes:!0,collapseInlineTagWhitespace:!1,collapseWhitespace:!0,conservativeCollapse:!1,continueOnParseError:!1,customAttrAssign:[],customAttrCollapse:"",customAttrSurround:[],customEventAttributes:[/^on[a-z]{3,}$/],decodeEntities:!1,html5:!0,ignoreCustomComments:[],ignoreCustomFragments:[],includeAutoGeneratedTags:!0,keepClosingSlash:!0,maxLineLength:null,minifyCSS:!0,minifyJS:!0,minifyURLs:!1,preserveLineBreaks:!1,preventAttributesEscaping:!1,processConditionalComments:!0,processScripts:["module"],quoteCharacter:"",removeAttributeQuotes:!0,removeComments:!0,removeEmptyAttributes:!0,removeEmptyElements:!1,removeOptionalTags:!1,removeRedundantAttributes:!0,removeScriptTypeAttributes:!0,removeStyleLinkTypeAttributes:!0,removeTagWhitespace:!0,sortAttributes:!0,sortClassName:!0,trimCustomFragments:!1,useShortDoctype:!1},js:{ecma:5,enclose:!1,keep_classnames:!1,keep_fnames:!1,ie8:!1,module:!1,safari10:!1,toplevel:!1},img:{fit:{width:1920,height:1080},avif:{chromaSubsampling:"4:4:4",effort:9},gif:{effort:10},heif:{chromaSubsampling:"4:4:4"},jpeg:{chromaSubsampling:"4:4:4",mozjpeg:!0,trellisQuantisation:!0,overshootDeringing:!0,optimiseScans:!0},png:{compressionLevel:9,palette:!0},raw:{},tiff:{compression:"lzw"},webp:{effort:6}},logger:2},o);return e.path=(s=e.path)!=null&&s.endsWith("/")?e.path:`${e.path}/`,{name:"astro-compress",hooks:{"astro:config:done":async t=>{e.path=e.path?e.path:t.config.outDir.toString()},"astro:build:done":async()=>{e.css&&await c(`${e.path}**/*.css`,t=>y.minify(t,e.css).css),e.html&&await c(`${e.path}**/*.html`,async t=>await d.minify(t,e.html)),e.js&&await c(`${e.path}**/*.{js,mjs,cjs}`,async t=>(await v(t,e.js)).code),e.img&&await j(`${e.path}**/*.{avci,avcs,avif,avifs,gif,heic,heics,heif,heifs,jfif,jif,jpe,jpeg,jpg,png,raw,tiff,webp}`,e.img,e.logger)}}}}export{b as default};

import m from"./lib/format-bytes.js";import{optimize as l}from"svgo";import f from"files-pipeline/dist/lib/deepmerge.js";import c from"files-pipeline/dist/options/index.js";import o from"./options/index.js";import{files as u}from"files-pipeline";import{minify as d}from"csso";import{minify as h}from"html-minifier-terser";import n from"sharp";import{minify as g}from"terser";import y from"./lib/sharp-read.js";var A=(t={})=>{for(const a in t)Object.prototype.hasOwnProperty.call(t,a)&&t[a]===!0&&(t[a]=o[a]);t=f(o,t);const s=new Set;if(typeof t.path<"u")if(t.path instanceof Array||t.path instanceof Set)for(const a of t.path)s.add(a);else s.add(t.path);return{name:"astro-compress",hooks:{"astro:build:done":async()=>{for(const[a,i]of Object.entries(t))for(const p of s)await(await(await(await new u(t.logger).in(p)).by((()=>{switch(a){case"css":return"**/*.css";case"html":return"**/*.html";case"js":return"**/*.{js,mjs,cjs}";case"img":return"**/*.{avci,avcs,avif,avifs,gif,heic,heics,heif,heifs,jfif,jif,jpe,jpeg,jpg,png,raw,tiff,webp}";case"svg":return"**/*.svg";case"json":return"**/*.json";default:return""}})())).not(t.exclude)).pipeline(f(o.pipeline,{wrote:async e=>{switch(a){case"css":return d(e.buffer.toString(),i).css;case"html":return await h(e.buffer.toString(),i);case"js":{const{code:r}=await g(e.buffer.toString(),i);return r||e.buffer}case"img":return y(i,e);case"svg":{const{data:r}=l(e.buffer.toString(),i);return typeof r<"u"?r:e.buffer}case"json":return JSON.stringify(e.buffer.toString());default:return e.buffer}},read:async e=>{switch(a){case"img":{const r=await n(e.inputPath).metadata();return console.log(r.format==="webp"||r.format==="gif"?r:null),n(e.inputPath,{failOn:"none",sequentialRead:!0,unlimited:!0})}default:return await c.pipeline.read(e)}},fulfilled:async e=>e.files>0?`Successfully compressed a total of ${e.files} ${a.toUpperCase()} ${e.files===1?"file":"files"} for ${await m(e.info.total)}.`:!1}))}}}};export{A as default};

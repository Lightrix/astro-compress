import u from"fast-glob";import s from"fs";import n from"./format-bytes";var d=async(l,f=2,c="",m=async o=>o,p=async o=>await s.promises.readFile(o,"utf-8"))=>{const o=await u(l),t={initial:0,files:0,total:0};for(const e of o)try{const i=(await s.promises.stat(e)).size;t.initial+=i;const a=await m(await p(e));if(!a)continue;if(i>Buffer.byteLength(a)){await s.promises.writeFile(e,a,"utf-8");const r=(await s.promises.stat(e)).size;t.files++,t.total+=i-r,f>1&&console.info("\x1B[32mCompressed "+e.replace(/^.*[\\\/]/,"")+" for "+await n(i-r)+" ("+((i-r)/i*100).toFixed(2)+"% reduction).\x1B[39m")}}catch{console.log("Error: Cannot compress file "+e+"!")}f>0&&console.info("\x1B[32mSuccessfully compressed a total of "+t.files+" "+c.toUpperCase()+" "+(t.files===1?"file":"files")+" for "+await n(t.total)+".\x1B[39m")};export{d as default};

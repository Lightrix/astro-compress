import{minify as p}from"csso";import c from"fs";import{minify as m}from"html-minifier-terser";import{cpus as n}from"os";import h from"sharp";import{optimize as l}from"svgo";import{minify as w}from"terser";import{ImagePool as y}from"@squoosh/lib";import s from"./parse.js";import j from"./sharp-read.js";var I=async(i,o=2)=>{const t=new y(n().length);for(const e in i)if(Object.prototype.hasOwnProperty.call(i,e)){const r=i[e];if(!r)continue;switch(e){case"css":await s(`${i.path}**/*.css`,o,e,a=>p(a,r).css);break;case"html":await s(`${i.path}**/*.html`,o,e,async a=>await m(a,r));break;case"js":await s(`${i.path}**/*.{js,mjs,cjs}`,o,e,async a=>(await w(a,r)).code);break;case"sharp":await s(`${i.path}**/*.{avci,avcs,avif,avifs,gif,heic,heics,heif,heifs,jfif,jif,jpe,jpeg,jpg,png,raw,tiff,webp}`,o,e,async a=>await j(a,r),async a=>h(a));break;case"squoosh":await s(`${i.path}**/*.{avci,avcs,avif,avifs,gif,heic,heics,heif,heifs,jfif,jif,jpe,jpeg,jpg,png,raw,tiff,webp}`,o,e,async a=>{console.log(a)},async a=>t.ingestImage(await c.promises.readFile(a)));break;case"svg":await s(`${i.path}**/*.svg`,o,e,async a=>{const f=l(a,r);if(typeof f.error<"u"&&console.log(f.error),typeof f.data<"u")return f.data});break;default:break}}await t.close()};export{I as default};
